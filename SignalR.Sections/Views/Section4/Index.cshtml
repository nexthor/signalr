@{
    ViewData["Title"] = "Section 4 - Harry Potter House";
}

<h2>@ViewData["Title"]</h2>

<div class="row border p-1 mt-3">
    <h3>Subscribed List: </h3>
    <hr />
    <div class="row p-2">
        <div class="col-12">
            <label style="color:#B52033" id="lbl_houseJoined">Subscribed House Names</label>
        </div>
    </div>
</div>
<div class="row border p-1 mt-3">
    <h3>Subscribe: </h3>
    <hr />
    <div class="row p-2">
        <div class="col-3">
            <button class="btn btn-danger" id="btn_gryffindor">Gryffindor</button>
        </div>
        <div class="col-3">
            <button class="btn btn-info" id="btn_slytherin">Slytherin</button>
        </div>
        <div class="col-3">
            <button class="btn btn-success" id="btn_hufflepuff">Hufflepuff</button>
        </div>
        <div class="col-3">
            <button class="btn btn-warning" id="btn_ravenclaw">Ravenclaw</button>
        </div>
    </div>
</div>
<div class="row border p-1 mt-3">
    <h3>Unsubscribe: </h3>
    <hr />
    <div class="row p-2">
        <div class="col-3">
            <button class="btn btn-danger d-none" id="btn_un_gryffindor">Gryffindor</button>
        </div>
        <div class="col-3">
            <button class="btn btn-info d-none" id="btn_un_slytherin">Slytherin</button>
        </div>
        <div class="col-3">
            <button class="btn btn-success d-none" id="btn_un_hufflepuff">Hufflepuff</button>
        </div>
        <div class="col-3">
            <button class="btn btn-warning d-none" id="btn_un_ravenclaw">Ravenclaw</button>
        </div>
    </div>
</div>
<div class="row border p-1 mt-3">
    <h3>Trigger Notification: </h3>
    <hr />
    <div class="row p-2">
        <div class="col-3">
            <button class="btn btn-danger" id="trigger_gryffindor">Gryffindor</button>
        </div>
        <div class="col-3">
            <button class="btn btn-info" id="trigger_slytherin">Slytherin</button>
        </div>
        <div class="col-3">
            <button class="btn btn-success" id="trigger_hufflepuff">Hufflepuff</button>
        </div>
        <div class="col-3">
            <button class="btn btn-warning" id="trigger_ravenclaw">Ravenclaw</button>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.css" integrity="sha512-3pIirOrwegjM6erE5gPSwkUzO+3cTjpnV9lexlNZqvupR64iZBnOOTiiLPb9M36zpMScbmUNIcHUqKD47M719g==" crossorigin="anonymous" referrerpolicy="no-referrer" />
}

@section Scripts {
    <script src="~/lib/microsoft-signalr/signalr.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js" integrity="sha512-VEd+nq25CkR676O+pLBnDW09R7VQX9Mdiij052gVCp5yVH3jGtH70Ho/UUv4mJDsEdTvqRCFZg0NKGiojGnUCw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>
        let lbl_houseJoined = document.getElementById("lbl_houseJoined");
        // unsubscribe
        let btn_un_gryffindor = document.getElementById("btn_un_gryffindor");
        let btn_un_slytherin = document.getElementById("btn_un_slytherin");
        let btn_un_hufflepuff = document.getElementById("btn_un_hufflepuff");
        let btn_un_ravenclaw = document.getElementById("btn_un_ravenclaw");
        // subscribe
        let btn_gryffindor = document.getElementById("btn_gryffindor");
        let btn_slytherin = document.getElementById("btn_slytherin");
        let btn_hufflepuff = document.getElementById("btn_hufflepuff");
        let btn_ravenclaw = document.getElementById("btn_ravenclaw");
        // trigger
        let trigger_gryffindor = document.getElementById("trigger_gryffindor");
        let trigger_slytherin = document.getElementById("trigger_slytherin");
        let trigger_hufflepuff = document.getElementById("trigger_hufflepuff");
        let trigger_ravenclaw = document.getElementById("trigger_ravenclaw");
        
        let houses = [];

        // 1. create connection
        var connection = new signalR.HubConnectionBuilder().withUrl("/hubs/houseGroup").build();

        // 2. connect to methods that hub invokes aka receive n otifications from hub

        // listeners
        function SubscribeAction(subsEl, unsubEl, houseName){
            subsEl.addEventListener("click", function (event) {
                connection.invoke("JoinGroup", houseName);
                unsubEl.classList.remove("d-none");

                houses.push(houseName);
                updateLabel();
                toastr.success("You have been subscribed to " + houseName);
                event.preventDefault();
            });
        }

        function UnsubscribeAction(unsubEl, houseName){
            unsubEl.addEventListener("click", (event) => {
                connection.invoke("LeaveGroup", houseName);
                unsubEl.classList.add("d-none");

                removeHouse(houseName);
                toastr.warning("You have been unsubscribed from " + houseName);
                event.preventDefault();
            });
        }

        function TriggerHouseNotification(triggerEl, houseName) {
            triggerEl.addEventListener("click", (event) => {
                connection.invoke("TriggerHouseNotify", houseName);
                toastr.info("Notification has been triggered for " + houseName);
                event.preventDefault();
            });
        }

        SubscribeAction(btn_gryffindor, btn_un_gryffindor, "Gryffindor");
        SubscribeAction(btn_slytherin, btn_un_slytherin, "Slytherin");
        SubscribeAction(btn_hufflepuff, btn_un_hufflepuff, "Hufflepuff");
        SubscribeAction(btn_ravenclaw, btn_un_ravenclaw, "Ravenclaw");

        UnsubscribeAction(btn_un_gryffindor, "Gryffindor");
        UnsubscribeAction(btn_un_slytherin, "Slytherin");
        UnsubscribeAction(btn_un_hufflepuff, "Hufflepuff");
        UnsubscribeAction(btn_un_ravenclaw, "Ravenclaw");

        TriggerHouseNotification(trigger_gryffindor, "Gryffindor");
        TriggerHouseNotification(trigger_slytherin, "Slytherin");
        TriggerHouseNotification(trigger_hufflepuff, "Hufflepuff");
        TriggerHouseNotification(trigger_ravenclaw, "Ravenclaw");

        function removeHouse(houseName) {
            var index = houses.indexOf(houseName);
            if (index > -1) {
                houses.splice(index, 1);
            }
            updateLabel();
        }

        function updateLabel() {
            lbl_houseJoined.innerHTML = houses.length ? houses.join(", ") : "Subscribed House Names";
        }

        // 3. invoke hub methods aka send notification to hub
        function fulfilled(){
            console.log("connection established");
        }

        function rejected(){

        }

        connection.on("subscriptionStatus", (strGoupsJoined, houseName, hasSubscribed) => {
            if (hasSubscribed)
                lbl_houseJoined.innerHTML = strGoupsJoined;
        });

        connection.on("newMemberAddedFromHouse", (houseName => {
            toastr.info("New member added to " + houseName);
        }));

        connection.on("newMemberRemovedFromHouse", (houseName => {
            toastr.warning("A member were removed from " + houseName);
        }));

        connection.on("triggerHouseNotification", (houseName => {
            toastr.warning(`A new notification for ${houseName} has been launched.`);
        }));

        // 4. start connection
        connection.start().then(fulfilled, rejected);
    </script>
}